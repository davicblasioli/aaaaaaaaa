CREATE TABLE usuarios (
	id_usuario integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	nome varchar(255) NOT NULL,
	email varchar(255) NOT NULL,
	senha varchar(255) NOT NULL,
	telefone varchar(20) NOT NULL,
	data_nascimento date NOT NULL,
	cargo varchar(255) NOT NULL,
	status varchar(255) NOT NULL,
	tentativas_erro integer NOT NULL
);

ALTER TABLE USUARIOS ALTER COLUMN DATA_NASCIMENTO TYPE DATE;
ALTER TABLE USUARIOS DROP multa;



CREATE TABLE livros (
	id_livro integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	titulo varchar(255) NOT NULL,
	autor varchar(255) NOT NULL,
	data_publicacao date NOT NULL,
	ISBN varchar(255) NOT NULL,
	descricao varchar(255) NOT NULL,
	quantidade numeric(5),
	categoria varchar(255) NOT NULL
);

ALTER TABLE LIVROS ADD ANO_PUBLICACAO INTEGER;
UPDATE LIVROS SET ANO_PUBLICACAO = EXTRACT(YEAR FROM data_publicacao);
ALTER TABLE LIVROS DROP data_publicacao;
ALTER TABLE LIVROS ALTER COLUMN ANO_PUBLICACAO TO data_publicacao;


-- 1. Adiciona nova coluna do tipo BLOB texto
ALTER TABLE LIVROS ADD descricao_blob BLOB SUB_TYPE 1;

-- 2. Copia os dados da coluna antiga para a nova (convertendo texto)
UPDATE LIVROS SET descricao_blob = descricao;

-- 3. Remove a coluna antiga
ALTER TABLE LIVROS DROP descricao;

-- 4. Renomeia a nova coluna para o nome original
ALTER TABLE LIVROS ALTER COLUMN descricao_blob TO descricao;


CREATE TABLE configmulta(
	id_config integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	valorfixo NUMERIC(10,2) NOT NULL,
	acrescimo NUMERIC(10,2) NOT NULL,
	ano integer NOT NULL
);

ALTER TABLE CONFIGMULTA DROP ano;
ALTER TABLE CONFIGMULTA ADD ANO_INT INTEGER;
UPDATE CONFIGMULTA SET ANO_INT = EXTRACT(YEAR FROM ano);
ALTER TABLE CONFIGMULTA DROP ano;
ALTER TABLE CONFIGMULTA ALTER COLUMN ANO_INT TO ano;


CREATE TABLE multas(
	id_multa integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	valor NUMERIC(10,2) NOT NULL,
	data_lancamento date NOT NULL,
	id_usuario integer NOT NULL,
	id_config integer NOT NULL,
	FOREIGN KEY (id_usuario) REFERENCES usuarios (id_usuario) ON DELETE CASCADE ON UPDATE CASCADE,
	FOREIGN KEY (id_config) REFERENCES configmulta (id_config) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE emprestimos(
	id_emprestimo integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	status integer,
	data_reserva date NOT NULL,
	data_emprestimo date NOT NULL,
	data_devolucao date NOT NULL,
	data_devolvida date NOT NULL,
	id_usuario integer,
	id_livro integer,
	FOREIGN KEY (id_livro) REFERENCES livros (id_livro) ON DELETE CASCADE ON UPDATE CASCADE,
	FOREIGN KEY (id_usuario) REFERENCES usuarios (id_usuario) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE itens_emprestimo (
	id_item integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	titulo varchar(255) NOT NULL,
	emprestimos varchar(255) NOT NULL,
	id_emprestimo integer,
	FOREIGN KEY (id_emprestimo) REFERENCES emprestimos (id_emprestimo) ON DELETE CASCADE ON UPDATE CASCADE
);

 SELECT ID_CONFIG, VALORFIXO, ACRESCIMO
    FROM CONFIGMULTA
    WHERE  ANO = 2025


ALTER TABLE usuarios ALTER COLUMN status SET DEFAULT 'Ativo';
ALTER TABLE usuarios ALTER COLUMN tentativas_erro SET DEFAULT 0;
ALTER TABLE usuarios ALTER COLUMN cargo SET DEFAULT 'Cliente';
ALTER TABLE usuarios ALTER COLUMN multa SET DEFAULT 0;

UPDATE USUARIOS SET tentativas_erro=0;
UPDATE USUARIOS SET cargo='Cliente';

ALTER TABLE livros ALTER COLUMN status SET DEFAULT 'Disponível'

INSERT INTO usuarios(nome, email, senha, telefone, DATA_NASCIMENTO, multa, cargo, status)
values('paulinho', 'paulinho@gmail.com', 'Paulo@2000', '999999999', '2020-02-20', 0, 'Cliente', 'Ativo') 

INSERT INTO usuarios(nome, email, senha, telefone, DATA_NASCIMENTO, multa, cargo, status)
values('aaaaa', 'aaaaaa@gmail.com', 'Aaaa@2000', '899999999', '2020-02-20', 0, 'Cliente', 'Ativo') 

INSERT INTO usuarios(nome, email, senha, telefone, DATA_NASCIMENTO, multa, cargo, status)
values('jorge', 'jorge@gmail.com', 'Jorge@2000', '799999999', '2020-02-20', 0, 'Cliente', 'Ativo')

INSERT INTO livros (titulo, autor, data_publicacao, ISBN, descricao, quantidade, categoria)
VALUES (
    'O Pequeno',
    'Antoine de Saint-Exupéry',
    '1943-04-06',
    '978-3-16-148410-0',
    'Uma amizade e amor.',
    10, 
    'Adulto', 
);

SELECT EXTRACT(YEAR FROM ano) AS ANO
FROM configmulta;






criar um TRIGGER de AFTER UPDATE  EMPRESTIMOS 

verificar se o status e igual a 3 ...
pegar DATA devolvido > que a DATA devolucao


se FOR extrario o ano de devolvido 

e busco na tabela de config multa tbm extraindo o ano , para pegar o valor da multa e o valor do acrescimo


o valor da multa sera fixol , e o a crescimo sera multiplicado pela quantidade de dias em atraso...

inserir na tabela de multas 











CREATE OR alter TRIGGER TG_CALCULA_MULTA FOR EMPRESTIMOS AFTER UPDATE
AS
DECLARE VARIABLE vAnoDevolvida INTEGER;
DECLARE VARIABLE vDiasAtraso INTEGER;
DECLARE VARIABLE vValorFixo NUMERIC(10,2);
DECLARE VARIABLE vAcrescimo NUMERIC(10,2);
DECLARE VARIABLE vValorMulta NUMERIC(10,2);
DECLARE VARIABLE vIdConfig INTEGER;
BEGIN
  IF (NEW.STATUS = 3 AND NEW.DATA_DEVOLVIDA > NEW.DATA_DEVOLUCAO) THEN
  BEGIN 
    -- Extrai o ano da data devolvida
    vAnoDevolvida = EXTRACT(YEAR FROM NEW.DATA_DEVOLVIDA);

    -- Busca os dados da config correspondente ao ano
    SELECT ID_CONFIG, VALORFIXO, ACRESCIMO
    FROM CONFIGMULTA
    WHERE  ANO = :vAnoDevolvida
    INTO :vIdConfig, :vValorFixo, :vAcrescimo;

    -- Calcula os dias de atraso
    vDiasAtraso = DATEDIFF(DAY FROM NEW.DATA_DEVOLUCAO TO NEW.DATA_DEVOLVIDA);

    -- Calcula o valor da multa
    vValorMulta = vValorFixo + (vAcrescimo * vDiasAtraso);

    -- Insere o registro na tabela de multas
    INSERT INTO MULTAS (
        VALOR,
        DATA_LANCAMENTO,
        ID_USUARIO,
        ID_CONFIG
    ) VALUES (
        :vValorMulta,
        CURRENT_DATE,
        NEW.ID_USUARIO,
        :vIdConfig
    );
  END
END;